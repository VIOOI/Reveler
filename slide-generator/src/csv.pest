text = { ( ASCII_ALPHANUMERIC | NEWLINE | text_symbol | endl | russ_symbol  )+ }
text_symbol = _{(" "|"_"|"-"|"."|","|"/"|":"|";"|"("|")"|"["|"]"|"{"|"}"|"#"|"?"|"!"|"%")}
russ_symbol = _{(
  "а"|"б"|"в"|"г"|"д"|"е"|"ё"|"ж"|"з"|"и"|"й"|"к"|"л"|"м"|"н"|"о"|"п"
  |"р"|"с"|"т"|"у"|"ф"|"ч"|"ц"|"ш"|"щ"|"ъ"|"ь"|"э"|"ю"|"я"|
  "А"|"Б"|"В"|"Г"|"Д"|"Е"|"Ё"|"Ж"|"З"|"И"|"Й"|"К"|"Л"|"М"|"Н"|"О"|"П"
  |"Р"|"С"|"Т"|"У"|"Ф"|"Ч"|"Ц"|"Ш"|"Щ"|"Ъ"|"Ь"|"Э"|"Ю"|"Я"
)}
quote = _{("\"" | "\'")}


endl = _{(" " | "\n" | "\t")}

// Html Atributes ------- start

name_attr = {( ASCII_ALPHANUMERIC | NEWLINE | text_symbol | "@" )+}
value_attr = {( ASCII_ALPHANUMERIC | NEWLINE | text_symbol | russ_symbol | endl | "=" )+}
attr = {endl* ~ name_attr ~ "=" ~ quote ~ value_attr ~ quote ~ endl* }
attributes = {attr*}

// Html Atributes ------- end

// Html Tags ------- start
name_tag = {ASCII_ALPHANUMERIC*}
open_tag = _{endl* ~ "<" ~ name_tag ~ endl? ~ attributes? ~ ">" ~ endl*}
close_tag = _{endl* ~ "</" ~ ASCII_ALPHANUMERIC* ~ ">" ~ endl*}
tag_children = _{( style | children)}
tag = { open_tag ~ reactive? ~ tag_children* ~ close_tag }

js_text = {( ASCII_ALPHANUMERIC|NEWLINE|text_symbol|endl|quote|russ_symbol|"="|">"|"<" )+}
reactive = {
  endl*
  ~ "reactive" ~ " "? ~ "{{*" ~ endl*
  ~ js_text*
  ~ "*}}" ~ endl*
}

rule_name = {( ASCII_ALPHANUMERIC | endl | "-" )+}
rule_value = {( ASCII_ALPHANUMERIC | text_symbol | quote | "-" )+}
css_rule = {endl* ~ rule_name ~ ":" ~ " "? ~ rule_value ~ endl*}
selector = {("#"|".")? ~ ( ASCII_ALPHANUMERIC | "-" | ">" | " " )*}
css_selector = {
  endl* ~ selector ~ " "? ~ "{" ~ endl*
  ~ css_rule*
  ~ endl * ~ "}" ~ endl*
}
style = {
  endl*
  ~ "<style>" ~ endl*
  ~ css_rule*
  ~ "</style>" ~ endl*
}
global_style = {
  endl*
  ~ "<style>" ~ endl*
  ~ css_selector*
  ~ "</style>" ~ endl*
}

script = {
  endl*
  ~ "script{{*" ~ endl*
  ~ js_text*
  ~ "*}}" ~ endl*
}

ones_tag = {
	endl* ~ "<" 
      ~ name_tag
      ~ attributes?
    ~ "/>" ~ endl*
}
children = {( text | tag | ones_tag )}

// Html Tags ------- end


// Slider Construction ------- start
slider = { 
  endl*? 
  ~ "<slider" ~ attributes? ~ ">" ~ endl*
  ~ row*
  ~ "</slider>" ~ endl*
}
row = { 
	"<row" ~ attributes? ~ ">" ~ endl*
    ~ slide*
    ~ "</row>" ~ endl*
}

bg_color = { "bg_color=" ~ quote ~ text ~ quote ~ endl* }
text_color = { "text_color=" ~ quote ~ text ~ quote ~ endl* }

slide_attr = {( bg_color | text_color | attributes )}

slide = {
  "<slide" 
    ~ endl* ~ attributes ~ endl*
  ~ ">" ~ endl*
  ~ script?
  ~ global_style*
  ~ children*
  ~ "</slide>" ~ endl*
}

// Slider Construction ------- end
